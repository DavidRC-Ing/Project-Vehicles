import pandas as pd
import plotly.express as px
import streamlit as st

# Cargar datos con ruta relativa
car_data = pd.read_csv("vehicles_us.csv")


# T√≠tulo de la aplicaci√≥n
st.title('An√°lisis de Datos de Anuncios de Venta de Veh√≠culos')
st.markdown("""
### üõ†Ô∏è Detalles del Proyecto
En este proyecto se realizara un analisis preliminar de datos del conjunto `vehicles_us` este dataframe incluye datos sobre kilometraje, precio, modelo, etc.
- **Datos:** Veh√≠culos en venta en EE.UU.
- **Objetivo:** Analizar la relaci√≥n entre od√≥metro y precio.
- üîç *Usamos gr√°ficos interactivos con Plotly.*
""")

st.header("Exploraci√≥n de datos")
st.dataframe(car_data)

st.subheader("Filtrar por a√±o de fabricaci√≥n:")
st.markdown("""Como analista de datos, se puede realizar un filtrado de los datos utilizando la columna `model_year` para segmentar los veh√≠culos seg√∫n su a√±o de modelo. Este enfoque permite identificar patrones de comportamiento de compra de los consumidores, analizando tendencias y preferencias asociadas a veh√≠culos de diferentes a√±os.""")

selected_year = st.selectbox("Selecciona un a√±o:", sorted(
    car_data['model_year'].dropna().unique().astype(int)))

# Filtrar datos por el a√±o seleccionado
filtered_data = car_data[car_data['model_year'] == selected_year]

# Mostrar la tabla filtrada
st.dataframe(filtered_data)

st.header("Distribucion Grafica basado en el Odometro de los Vehiculos")
st.markdown(""" - Se puede seleccionar y visualizar la distribuci√≥n gr√°fica de los precios de los veh√≠culos en funci√≥n de su kilometraje (od√≥metro), lo que permitir√° identificar patrones, tendencias y relaciones entre estas dos variables clave.""")

# Botones para mostrar/ocultar gr√°ficos
show_hist = st.checkbox(" Mostrar Histograma", value=True)
show_scatter = st.checkbox("Mostrar Gr√°fico de Dispersi√≥n", value=True)

# Histograma
if show_hist:
    with st.expander(" Histograma de Od√≥metro"):
        st.write("Distribuci√≥n de kilometraje en los anuncios de venta de coches")
        fig_hist = px.histogram(
            car_data, x="odometer",
            color_discrete_sequence=["#FF5733"],  # Color personalizado
            title="Distribuci√≥n del Od√≥metro en Veh√≠culos"
        )
        st.plotly_chart(fig_hist, use_container_width=True)

# Gr√°fico de dispersi√≥n
if show_scatter:
    with st.expander(" Gr√°fico de Dispersi√≥n Precio vs. Od√≥metro"):
        st.write("Relaci√≥n entre kilometraje y precio de los veh√≠culos")
        fig_scatter = px.scatter(
            car_data, x="odometer", y="price",
            color="price",  # Colorear por precio
            color_continuous_scale="Viridis",  # Paleta de colores
            title="Relaci√≥n entre Od√≥metro y Precio"
        )
        st.plotly_chart(fig_scatter, use_container_width=True)

st.header("Next Analysis")
st.subheader("To be Continue")
